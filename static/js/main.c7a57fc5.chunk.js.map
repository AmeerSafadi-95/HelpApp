{"version":3,"sources":["components/Help.js","components/Homepage.js","components/Navar.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Help","props","show","setState","pass","e","target","value","cancle","state","user","userPass","trueCount","faleCount","service","button","onClick","this","style","width","height","fontSize","position","right","type","className","path","userName","onChange","fontFamily","color","placeholder","bottom","to","textAlign","backgroundColor","borderStyle","left","Component","Sign","vailduserName","vailduserPass","handleuserName","length","match","handleuserPassword","vailedUser","submit","disabled","Navar","top","marginRight","chooseService","Main","path1","borderRadius","App","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wRAGqBA,G,wDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,KAAK,WACD,EAAKC,SAAS,CAACD,MAAK,KAdL,EAiBnBE,KAAK,SAACC,GACF,EAAKF,SAAS,CAACC,KAAKC,EAAEC,OAAOC,SAlBd,EAqBnBC,OAAO,WACA,EAAKC,MAAML,OAAS,EAAKK,MAAMC,KAAKC,SACnC,EAAKR,SAAS,CAACS,UAAU,EAAKH,MAAMG,UAAU,IAE9C,EAAKT,SAAS,CAACU,UAAU,EAAKJ,MAAMI,UAAU,IAElD,EAAKV,SAAS,CAACC,KAAK,MAxBpB,EAAKK,MAAQ,CACRC,KAAKT,EAAMS,KACXI,QAAQb,EAAMa,QACdZ,MAAK,EACLU,UAAU,EACVC,UAAU,EACVT,KAAK,IATK,E,qDA+Bf,IAAIW,EAAS,4BAAQC,QAASC,KAAKf,KAAMgB,MAAO,CAACC,MAAM,QAAQC,OAAO,OAAOC,SAAS,OAAOC,SAAS,WAAWC,MAAM,QAASC,KAAK,SAASC,UAAU,kBAA3I,YACTvB,EAAO,GACPwB,EAAK,SAAD,OAAUT,KAAKR,MAAMC,KAAKiB,UAalC,OAZGV,KAAKR,MAAMP,OACVA,EAAO,2BAAO0B,SAAUX,KAAKb,KAAMc,MAAO,CAACW,WAAW,kBAAkBC,MAAM,MAAMX,MAAM,QAAQC,OAAO,OAAOC,SAAS,QAASd,MAAOU,KAAKR,MAAML,KAAM2B,YAAY,WAAWP,KAAK,aACtLT,EAAS,4BAAQC,QAASC,KAAKT,OAAQU,MAAO,CAACC,MAAM,QAAQC,OAAO,OAAOC,SAAS,OAAOC,SAAS,WAAWC,MAAM,OAAOS,OAAO,OAAQR,KAAK,SAASC,UAAU,kBAA1J,cAEe,IAAzBR,KAAKR,MAAMI,YACVX,EAAO,GACPa,EAAS,uBAAGG,MAAO,CAACG,SAAS,OAAOQ,WAAW,kBAAkBC,MAAM,QAA9D,6DAEe,IAAzBb,KAAKR,MAAMG,YACVG,EAAS,kBAAC,IAAD,CAAMkB,GAAKP,GAAX,IAAkB,4BAAQR,MAAO,CAACC,MAAM,QAAQC,OAAO,OAAOC,SAAS,OAAOC,SAAS,WAAWC,MAAM,QAASC,KAAK,SAASC,UAAU,kBAAvH,YAAlB,KACTvB,EAAK,IAGL,yBAAKgB,MAAO,CAACgB,UAAU,WAClB,yBAAKhB,MAAO,CAACiB,gBAAgB,QAAQf,OAAO,QAAQc,UAAU,WAC1D,uBAAGhB,MAAO,CAACG,SAAS,OAAOQ,WAAW,kBAAkBC,MAAM,UAAWb,KAAKR,MAAMK,UAEzF,6BACA,6BACA,6BACA,yBAAKI,MAAO,CAACgB,UAAU,SAASf,MAAM,QAAQC,OAAO,QAAQgB,YAAY,SAASd,SAAS,WAAWe,KAAK,WACvG,uBAAGnB,MAAO,CAACG,SAAS,OAAOQ,WAAW,kBAAkBC,MAAM,SAAUb,KAAKR,MAAMK,SACnF,uBAAGI,MAAO,CAACG,SAAS,OAAOQ,WAAW,kBAAkBC,MAAM,SAAUb,KAAKR,MAAMC,KAAKiB,WAE5F,6BACA,6BACA,6BACCZ,EACAb,O,GAhEiBoC,cCAbC,E,4MACjB9B,MAAM,CACFkB,SAAS,GACThB,SAAS,GACT6B,eAAc,EACdC,eAAc,G,EAGlBC,eAAiB,SAACrC,GACXA,EAAEC,OAAOC,MAAMoC,QAAU,GACrBtC,EAAEC,OAAOC,MAAMqC,MAAM,gBACpB,EAAKzC,SAAS,CAACwB,SAAStB,EAAEC,OAAOC,MAAQiC,eAAc,IAK3D,EAAKrC,SAAS,CAACqC,eAAc,K,EAKrCK,mBAAqB,SAACxC,GACW,IAA1BA,EAAEC,OAAOC,MAAMoC,QACXtC,EAAEC,OAAOC,MAAMqC,MAAM,kBACpB,EAAKzC,SAAS,CAACQ,SAASN,EAAEC,OAAOC,MAAQkC,eAAc,IAK3D,EAAKtC,SAAS,CAACsC,eAAc,K,EAIrCK,WAAW,WACH,EAAKrC,MAAM+B,eAAkB,EAAK/B,MAAMgC,eACxC,EAAKxC,MAAM8C,OAAO,CAACpB,SAAS,EAAKlB,MAAMkB,SAAWhB,SAAS,EAAKF,MAAME,Y,uDAQ1E,IAAI6B,EAAc,GACdC,EAAc,GACdf,EAAI,gBAAYT,KAAKR,MAAMkB,UAI/B,OAHGV,KAAKR,MAAM+B,gBAAeA,EAAc,uBAAGtB,MAAO,CAACY,MAAM,MAAMT,SAAS,SAAhC,+CACxCJ,KAAKR,MAAMgC,gBAAeA,EAAc,uBAAGvB,MAAO,CAACY,MAAM,MAAMT,SAAS,SAAhC,mCAG3C,yBAAKI,UAAU,OACX,yBAAKP,MAAO,CAACiB,gBAAgB,QAAQf,OAAO,QAAQc,UAAU,WAC1D,uBAAGhB,MAAO,CAACG,SAAS,OAAOQ,WAAW,kBAAkBC,MAAM,UAA9D,YAEJ,6BACA,6BACA,uBAAGZ,MAAO,CAACG,SAAS,OAAOQ,WAAW,kBAAkBC,MAAM,SAA9D,eACA,2BAAOZ,MAAO,CAACW,WAAW,kBAAkBC,MAAM,QAAQX,MAAM,QAAQC,OAAO,OAAOC,SAAS,QAASG,KAAK,OAAOO,YAAY,sBAAsBH,SAAUX,KAAKyB,iBACrK,6BACA,6BACCF,EACD,6BACA,6BACA,uBAAGtB,MAAO,CAACG,SAAS,OAAOQ,WAAW,kBAAkBC,MAAM,SAA9D,eACA,2BAAOZ,MAAO,CAACW,WAAW,kBAAkBC,MAAM,QAAQX,MAAM,QAAQC,OAAO,OAAOC,SAAS,QAASG,KAAK,WAAWO,YAAY,sBAAsBH,SAAUX,KAAK4B,qBACzK,6BACA,6BACCJ,EACD,6BACA,6BACA,6BACA,kBAAC,IAAD,CAAMR,GAAIP,GAAM,4BAAQR,MAAO,CAACC,MAAM,QAAQC,OAAO,OAAOC,SAAS,QAASG,KAAK,SAASC,UAAU,eAAeT,QAASC,KAAK6B,WAAYE,YAAY/B,KAAKR,MAAM+B,gBAAkBvB,KAAKR,MAAMgC,gBAAnL,aAChB,kC,GAxEsBH,aCDnB,SAASW,EAAMhD,GAM1B,OACI,yBAAKiB,MAAO,CAACiB,gBAAgB,QAAQf,OAAO,QAAQc,UAAU,SAASb,SAAS,OAAOS,MAAM,QAAQR,SAAS,aAC1G,8BACA,uBAAGJ,MAAO,CAACI,SAAS,WAAW4B,IAAI,OAAO7B,SAAS,OAAO8B,YAAY,UAAtE,IAAkFlD,EAAMa,QAAxF,KACI,4BAAQc,SARA,SAACvB,GACjBJ,EAAMmD,cAAc/C,EAAEC,OAAOC,QAOYW,MAAO,CAACI,SAAS,WAAWU,OAAO,OAAOE,UAAU,SAASG,KAAK,UAC/F,4BAAQ9B,OAAK,GAAb,UACA,4BAAQA,MAAM,gBAAd,OACA,4BAAQA,MAAM,mBAAd,OACA,4BAAQA,MAAM,sBAAd,U,ICZC8C,E,kDACjB,WAAYpD,GAAQ,IAAD,8BACf,cAAMA,IAEDQ,MAAQ,CACRK,QAAQb,EAAMa,QACdJ,KAAKT,EAAMS,MALD,E,qDAUnB,IAAI4C,EAAK,gBAAYrC,KAAKR,MAAMK,SAC5B,OACI,yBAAKW,UAAU,OACX,kBAACwB,EAAD,CAAOG,cAAenC,KAAKhB,MAAMmD,cAAetC,QAASG,KAAKR,MAAMK,UACpE,6BACA,6BACA,6BACA,kBAAC,IAAD,CAAMmB,GAAKqB,GAAQ,4BAAQ9B,KAAK,SAASC,UAAU,iBAAiBP,MAAO,CAACC,MAAM,QAAQC,OAAO,QAAQC,SAAS,QAAQkC,aAAa,UAApH,iB,GAlBDjB,aCIbkB,E,4MACnB/C,MAAO,CACLK,QAAQ,eACRJ,KAAK,I,EAIPqC,OAAO,SAACrC,GACN,EAAKP,SAAS,CAACO,KAAKA,K,EAEtB0C,cAAc,SAAC/C,GACb,EAAKF,SAAS,CAACW,QAAQT,K,uDAGf,IAAD,OACHqB,EAAI,gBAAYT,KAAKR,MAAMC,KAAKiB,UAChC2B,EAAK,gBAAYrC,KAAKR,MAAMK,SAChC,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2C,OAAK,EAAC/B,KAAM,IAAIgC,UAAW,WAAK,OAAO,kBAAC,EAAD,CAAUX,OAAQ,EAAKA,YACrE,kBAAC,IAAD,CAAOU,OAAK,EAAC/B,KAAOA,EAAMgC,UAAW,WAAK,OAAO,kBAAC,EAAD,CAAMhD,KAAM,EAAKD,MAAMC,KAAMI,QAAS,EAAKL,MAAMK,QAASsC,cAAe,EAAKA,mBAC/H,kBAAC,IAAD,CAAOK,OAAK,EAAC/B,KAAM4B,EAAOI,UAAW,WAAK,OAAO,kBAAC,EAAD,CAAMhD,KAAM,EAAKD,MAAMC,KAAMI,QAAS,EAAKL,MAAMK,cAEpG,wBAAII,MAAO,CAACI,SAAS,WAAWe,KAAK,SAASa,IAAI,UAAlD,iB,GAzBuBZ,aCIbqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlB,MACvB,2DCZNmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c7a57fc5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Help extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             user:props.user,\r\n             service:props.service,\r\n             show:false,\r\n             trueCount:0,\r\n             faleCount:0,\r\n             pass:'',\r\n        }\r\n    }\r\n\r\n    show=()=>{\r\n        this.setState({show:true})\r\n    }\r\n\r\n    pass=(e)=>{\r\n        this.setState({pass:e.target.value})\r\n    }\r\n\r\n    cancle=()=>{\r\n        if(this.state.pass === this.state.user.userPass){\r\n            this.setState({trueCount:this.state.trueCount+1})\r\n        }else{\r\n            this.setState({faleCount:this.state.faleCount+1})\r\n        }\r\n        this.setState({pass:''})\r\n    }\r\n    \r\n    render() {\r\n        let button = <button onClick={this.show} style={{width:'250px',height:'60px',fontSize:'25px',position:'relative',right:'20px'}} type='button' className='btn btn-danger' > Cancle </button>\r\n        let show = '';\r\n        let path=`/main/${this.state.user.userName}`\r\n        if(this.state.show){\r\n            show = <input onChange={this.pass} style={{fontFamily:'Times new roman',color:'red',width:'300px',height:'60px',fontSize:'30px'}} value={this.state.pass} placeholder=\"password\" type='password' />\r\n            button = <button onClick={this.cancle} style={{width:'250px',height:'60px',fontSize:'25px',position:'relative',right:'20px',bottom:'5px'}} type='button' className='btn btn-danger'> Confirm </button>\r\n        }\r\n        if(this.state.faleCount === 3){\r\n            show = \"\"\r\n            button = <p style={{fontSize:'40px',fontFamily:'Times new roman',color:'red'}}> Your passwoed dosen't match , cant cancle this reguest </p>\r\n        }\r\n        if(this.state.trueCount === 2){\r\n            button = <Link to ={path}> <button style={{width:'250px',height:'60px',fontSize:'25px',position:'relative',right:'20px'}} type='button' className='btn btn-danger' > Cancle </button> </Link>\r\n            show=''\r\n        }\r\n        return (\r\n            <div style={{textAlign:'center'}}>\r\n                 <div style={{backgroundColor:'black',height:'100px',textAlign:'center'}}>\r\n                     <p style={{fontSize:'60px',fontFamily:'Times new roman',color:'white'}}>{this.state.service}</p>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <div style={{textAlign:'center',width:'600px',height:'300px',borderStyle:'groove',position:'relative',left:'1000px'}}>\r\n                    <p style={{fontSize:'60px',fontFamily:'Times new roman',color:'navy'}}>{this.state.service}</p>\r\n                    <p style={{fontSize:'60px',fontFamily:'Times new roman',color:'navy'}}>{this.state.user.userName}</p>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                {button}\r\n                {show}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Sign extends Component {\r\n    state={\r\n        userName:'',\r\n        userPass:'',\r\n        vailduserName:true,\r\n        vailduserPass:true,\r\n    }\r\n\r\n    handleuserName = (e) =>{\r\n        if(e.target.value.length >= 4 ){\r\n            if(e.target.value.match(/^[a-z,A-Z]+$/)){\r\n                this.setState({userName:e.target.value , vailduserName:false})\r\n            }else{\r\n                this.setState({vailduserName:true})\r\n            }\r\n        }else{\r\n            this.setState({vailduserName:true})\r\n        }  \r\n\r\n    }\r\n\r\n    handleuserPassword = (e) =>{\r\n        if(e.target.value.length === 8 ){\r\n            if(e.target.value.match(/^[0-9a-zA-Z]+$/)){\r\n                this.setState({userPass:e.target.value , vailduserPass:false})\r\n            }else{\r\n                this.setState({vailduserPass:true})\r\n            }\r\n        }else{\r\n            this.setState({vailduserPass:true})\r\n        }  \r\n    }\r\n\r\n    vailedUser=()=>{\r\n        if(!this.state.vailduserName && !this.state.vailduserPass){\r\n            this.props.submit({userName:this.state.userName , userPass:this.state.userPass})\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let vailduserName=''\r\n        let vailduserPass=\"\"\r\n        let path = `/main/${this.state.userName}`\r\n        if(this.state.vailduserName){vailduserName=<p style={{color:'red',fontSize:'25px'}}> must be at least 4 chars with no numbres </p>}\r\n        if(this.state.vailduserPass){vailduserPass=<p style={{color:'red',fontSize:'25px'}}> must be 8 chars with numbers </p>}\r\n\r\n        return (\r\n        <div className='App'>\r\n            <div style={{backgroundColor:'black',height:'100px',textAlign:'center'}}>\r\n                <p style={{fontSize:'60px',fontFamily:'Times new roman',color:'white'}}>Sign Up</p>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <p style={{fontSize:'50px',fontFamily:'Times new roman',color:'navy'}}> UserName: </p>\r\n            <input style={{fontFamily:'Times new roman',color:'green',width:'300px',height:'45px',fontSize:'30px'}} type='text' placeholder='Enter your userName' onChange={this.handleuserName} />\r\n            <br/>\r\n            <br/>\r\n            {vailduserName}\r\n            <br/>\r\n            <br/>\r\n            <p style={{fontSize:'50px',fontFamily:'Times new roman',color:'navy'}}> Password: </p>\r\n            <input style={{fontFamily:'Times new roman',color:'green',width:'300px',height:'45px',fontSize:'30px'}} type='password' placeholder='Enter your Password' onChange={this.handleuserPassword} />\r\n            <br/>\r\n            <br/>\r\n            {vailduserPass}\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <Link to={path}><button style={{width:'250px',height:'60px',fontSize:'30px'}} type='button' className='btn btn-info' onClick={this.vailedUser} disabled={(!this.state.vailduserName && !this.state.vailduserPass) ? false :true}> Submit </button></Link>             \r\n            <br/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import {Link} from 'react-router-dom'\r\n\r\n// export default class Homepage extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props)\r\n    \r\n//         this.state = {\r\n//              useruserName:'',\r\n//              useruserPassword:'',\r\n//              vailduserName:true,\r\n//              vailduserPass:true\r\n//         }\r\n//     }\r\n    \r\n//     handleuseruserName=(e)=>{\r\n//         if(e.target.value.length >= 4 ){\r\n//             if(e.target.value.match(/^[a-z,A-Z]+$/)){\r\n//                 this.setState({useruserName:e.target.value , vailduserName:false})\r\n//             }else{\r\n//                 this.setState({vailduserName:true})\r\n//             }\r\n//         }else{\r\n//             this.setState({vailduserName:true})\r\n//         }  \r\n//     }\r\n\r\n//     handleuseruserPassword=(e)=>{\r\n        \r\n//         if(e.target.value.length === 8 ){\r\n//             if(e.target.value.match(/^[0-9a-zA-Z]+$/)){\r\n//                 this.setState({useruserPassword:e.target.value , vailduserPass:false})\r\n//             }else{\r\n//                 this.setState({vailduserPass:true})\r\n//             }\r\n//         }else{\r\n//             this.setState({vailduserPass:true})\r\n//         }  \r\n//     }\r\n\r\n//     vailedUser=()=>{\r\n//         if(!this.state.vailduserName && !this.state.vailduserPass){\r\n//             this.props.addUser(this.state.useruserName , this.state.useruserPassword)\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         let vailduserName=''\r\n//         let vailduserPass=\"\"\r\n//         let path = `/main/${this.state.useruserName}`\r\n//         if(this.state.vailduserName){vailduserName=<p style={{color:'red',fontSize:'25px'}}> must be at least 4 chars with no numbres </p>}\r\n//         if(this.state.vailduserPass){vailduserPass=<p style={{color:'red',fontSize:'25px'}}> must be 8 chars with numbers </p>}\r\n//         return (\r\n//             <div classuserName='App'>\r\n//                <div style={{backgroundColor:'black',height:'100px',textAlign:'center'}}>\r\n//                     <p style={{fontSize:'60px',fontFamily:'Times new roman',color:'white'}}>Sign Up</p>\r\n//                </div>\r\n//                <br/>\r\n//                <br/>\r\n//                 <p style={{fontSize:'50px',fontFamily:'Times new roman',color:'navy'}}>UseruserName:</p>\r\n//                 <input style={{fontFamily:'Times new roman',color:'green',width:'300px',height:'45px',fontSize:'30px'}} type='text' placeholder='Enter your userName' onChange={this.handleuseruserName} />\r\n//                 <br/>\r\n//                 <br/>\r\n//                 {vailduserName}\r\n//                 <br/>\r\n//                 <br/>\r\n//                 <p style={{fontSize:'50px',fontFamily:'Times new roman',color:'navy'}}>userPassword:</p>\r\n//                 <input style={{fontFamily:'Times new roman',color:'green',width:'300px',height:'45px',fontSize:'30px'}} type='userPassword' placeholder='Enter your userPassword' onChange={this.handleuseruserPassword} />\r\n//                 <br/>\r\n//                 <br/>\r\n//                 {vailduserPass}\r\n//                 <br/>\r\n//                 <br/>\r\n//                 <br/>\r\n//                 <Link to={path}><button style={{width:'250px',height:'60px',fontSize:'30px'}} type='button' classuserName='btn btn-info' onClick={this.vailedUser} disabled={(!this.state.vailduserName && !this.state.vailduserPass) ? false :true}> Submit </button></Link>             \r\n//                 <br/>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// // onClick={()=>{this.vailedUser();this.props.addUser(this.state.useruserName,this.state.useruserPassword);}}","import React from 'react'\r\n\r\nexport default function Navar(props) {\r\n\r\n    let  chooseService =(e)=>{\r\n        props.chooseService(e.target.value)\r\n    }\r\n    \r\n    return (\r\n        <div style={{backgroundColor:'black',height:'100px',textAlign:'center',fontSize:'35px',color:'white',position:'relative'}}>\r\n            <span>\r\n            <p style={{position:'relative',top:'20px',fontSize:'35px',marginRight:'800px'}}> {props.service} </p>\r\n                <select onChange={chooseService} style={{position:'relative',bottom:'45px',textAlign:'center',left:'500px'}}>\r\n                    <option value>☰</option>\r\n                    <option value='100 - Police'>100</option>\r\n                    <option value='101 - Ambulance'>101</option>\r\n                    <option value='102 - Firefighting'>102</option>\r\n                </select>\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport Navar from './Navar'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             service:props.service,\r\n             user:props.user\r\n        }\r\n    }\r\n    \r\n    render() {\r\n    let path1 = `/help/${this.state.service}`\r\n        return (\r\n            <div className='App'>\r\n                <Navar chooseService={this.props.chooseService} service={this.state.service}/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <Link to ={path1} ><button type='button' className='btn btn-danger' style={{width:'500px',height:'500px',fontSize:'120px',borderRadius:'500px'}}> Help! </button></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Help from './components/Help';\nimport Homepage from './components/Homepage';\nimport Main from './components/Main';\n\nexport default class App extends Component {\n  state ={\n    service:'100 - Police',\n    user:{},\n  }\n\n  \n  submit=(user)=>{\n    this.setState({user:user})  \n  }\n  chooseService=(e)=>{\n    this.setState({service:e})\n  }\n  \n  render() {\n    let path = `/main/${this.state.user.userName}`\n    let path1 = `/help/${this.state.service}`\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route exact path ='/' component={()=>{return <Homepage submit={this.submit}/>}}></Route>\n            <Route exact path ={path} component={()=>{return <Main user={this.state.user} service={this.state.service} chooseService={this.chooseService}/>}}/>\n            <Route exact path={path1} component={()=>{return <Help user={this.state.user} service={this.state.service}/>}}/>\n          </Switch>\n          <h1 style={{position:'relative',left:'1200px',top:'300px'}}>HelpMe!</h1>\n        </Router>          \n      </div>\n     \n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}